Input:
<method>
    Element getParagraphElement(Document doc, int offset)
</method>
<TestCases>
    <checker>
    boolean checker(Element elem) {
        return elem != null && elem.getName().equals("head");
    }
    </checker>
    // #1.  String html = "<html>\n"
                + "   <head>\n"
                + "     <title>An example HTMLDocument</title>\n"
                + "     <style type=\"text/css\">\n"
                + "       div { background-color: silver; }\n"
                + "       ul { color: red; }\n"
                + "     </style>\n"
                + "   </head>\n"
                + "   <body>\n"
                + "     <div id=\"BOX\">\n"
                + "       <p>Paragraph 1</p>\n"
                + "       <p>Paragraph 2</p>\n"
                + "     </div>\n"
                + "   </body>\n"
                + " </html>\n";

            java.io.Reader stringReader = new java.io.StringReader(html);
            javax.swing.text.html.HTMLEditorKit htmlKit = new javax.swing.text.html.HTMLEditorKit();
            javax.swing.text.html.HTMLDocument htmlDoc = (javax.swing.text.html.HTMLDocument) htmlKit.createDefaultDocument();
            htmlKit.read(stringReader, htmlDoc, 0);
            doc = htmlDoc, line = 1 -> checker(getParagraphElement(doc, line)) == true
</TestCases>

Output:
public Element getParagraphElement(Document doc, int offset) {
    if (doc instanceof HTMLDocument) {
        HTMLDocument htmlDoc = (HTMLDocument) doc;
        Element element = htmlDoc.getParagraphElement(offset);
        while (element != null && !element.getName().equals("head")) {
            element = element.getParentElement();
        }
        return element;
    }
    return null;
}