Input:
<method>
   int guavaFrequency(Iterator<?> iterator, Object element)
</method>
<TestCases>
    // #1.  List("a", null, "b", null, "a", null).iterator(), "a" -> 2
    // #2.  List("a", null, "b", null, "a", null).iterator(), "b" -> 1
    // #3.  List("a", null, "b", null, "a", null).iterator(), "c" -> 0
    // #4.  List("a", null, "b", null, "a", null).iterator(), 4.2 -> 0
    // #5.  List("a", null, "b", null, "a", null).iterator(), null -> 3
    // #6.  List("", "A", "", "", "", "b", "", false, "", "").iterator(), "" -> 7
    // #7.  List(4, 3, 5, 3, 2, 3, 3, 4, 3).iterator(), 3 -> 5
</TestCases>

Output:
public static int guavaFrequency(Iterator << ? > iterator, Object element) {
    int count = 0;
    while (iterator.hasNext()) {
        Object current = iterator.next();
        if (element == null && current == null) {
            count++;
        } else if (element != null && element.equals(current)) {
            count++;
        }
    }
    return count;
}