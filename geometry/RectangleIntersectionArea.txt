Input:
<method>
     double rectangleIntersectionArea(Rectangle2D rect1, Rectangle2D rect2)
</method>
<TestCases>
    // #1.  Rectangle2D.Double(3.0, 4.0, 5.6, 0.9), Rectangle2D.Double(8.0, 4.2, 11.1, 3.0) -> 0.42
    // #2.  Rectangle2D.Double(3.0, 4.0, 6.0, 0.9), Rectangle2D.Double(8.0, 4.2, 11.1, 3.0) -> 0.7
    // #3.  Rectangle2D.Double(3.0, 4.0, 5.6, 1.0), Rectangle2D.Double(8.0, 3.0, 11.1, 3.0) -> 0.6
</TestCases>

Output:
public double rectangleIntersectionArea(Rectangle2D rect1, Rectangle2D rect2) {
    // Find the x and y coordinates of the intersection rectangle
    double xLeft = Math.max(rect1.getMinX(), rect2.getMinX());
    double yTop = Math.max(rect1.getMinY(), rect2.getMinY());
    double xRight = Math.min(rect1.getMaxX(), rect2.getMaxX());
    double yBottom = Math.min(rect1.getMaxY(), rect2.getMaxY());

    // Calculate the width and height of the intersection rectangle
    double intersectionWidth = xRight - xLeft;
    double intersectionHeight = yBottom - yTop;

    // If width or height is negative, there is no intersection
    if (intersectionWidth <= 0 || intersectionHeight <= 0) {
        return 0.0;
    }

    // Calculate and return the area of the intersection rectangle
    return intersectionWidth * intersectionHeight;
}