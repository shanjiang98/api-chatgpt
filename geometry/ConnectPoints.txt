Input:
<method>
     List<Line2D.Double> connectPoints(Point2D[] points)
</method>
<TestCases>
    // #1.  Point2D[] {new Point2D.Double(1.2, 3.4), new Point2D.Double(5.6, 7.8), new Point2D.Double(2.1, 4.3), new Point2D.Double()} -> List(new Line2D.Double(1.2, 3.4, 5.6, 7.8), new Line2D.Double(5.6, 7.8, 2.1, 4.3), new Line2D.Double(2.1, 4.3, 0, 0))
    // #2.  Point2D[] {new Point2D.Double(1.2, 3.4), new Point2D.Double(5.6, 7.8)} -> List(new Line2D.Double(1.2, 3.4, 5.6, 7.8))
    // #3.  Point2D[] {new Point2D.Double(), new Point2D.Double(5.6, 7.8)} -> List(new Line2D.Double(0, 0, 5.6, 7.8))
    // #4.  Point2D[] {new Point2D.Double(1.2, 3.4), new Point2D.Double()} -> List(new Line2D.Double(1.2, 3.4, 0, 0))
    // #5.  Point2D[] {new Point2D.Double(), new Point2D.Double()} -> List(new Line2D.Double())
</TestCases>

Output:
public List < Line2D.Double > connectPoints(Point2D[] points) {
    List < Line2D.Double > lines = new ArrayList < > ();
    for (int i = 0; i < points.length - 1; i++) {
        lines.add(new Line2D.Double(points[i], points[i + 1]));
    }
    return lines;
}